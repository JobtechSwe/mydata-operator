version: '3'
services:
  redis-operator:
    image: redis:4.0-alpine
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=fubar
    command: sh -c 'redis-server --requirepass $${REDIS_PASSWORD}'

  apm-server:
    image: docker.elastic.co/apm/apm-server:6.4.3
    ports:
      - 8200:8200
    depends_on:
      - elasticsearch
      - kibana
    environment:
      - RUM_ENABLED=true
      - RUM_RATE_LIMIT=10
      - RUM_ALLOW_ORIGINS=['*']
      - RUM_LIBRARY_PATTERN="node_modules|bower_components|~"
      - RUM_EXCLUDE_FROM_GROUPING="^/webpack"
      - RUM_SOURCE_MAPPING_CACHE_EXPIRATION=5m
      - RUM_SOURCE_MAPPING_INDEX_PATTERN="apm-*-sourcemap*"
    command: apm-server -e -E apm-server.rum.enabled=$${RUM_ENABLED} -E apm-server.rum.rate_limit=$${RUM_RATE_LIMIT} -E apm-server.rum.allow_origins=$${RUM_ALLOW_ORIGINS} -E apm-server.rum.library_pattern=$${RUM_LIBRARY_PATTERN} -E apm-server.rum.exclude_from_grouping=$${RUM_EXCLUDE_FROM_GROUPING} -E apm-server.rum.source_mapping.cache.expiration=$${RUM_SOURCE_MAPPING_CACHE_EXPIRATION} -E apm-server.rum.source_mapping.index_pattern=$${RUM_SOURCE_MAPPING_INDEX_PATTERN}

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.3
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - 5601:5601
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - elasticsearch
  
  postgres-operator:
    image: postgres:11-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespassword
      - POSTGRES_DB=mydata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mydata"]
      interval: 10s
      timeout: 5s
      retries: 5
  
#  operator:
#    build: .
#    environment:
#      - PORT=3000
#      - PGHOST=postgres-operator
#      - PGPORT=5432
#      - PGUSER=postgresuser
#      - PGPASSWORD=postgrespassword
#      - PGDATABASE=mydata
#      - DATABASE_URL=postgres://postgresuser:postgrespassword@postgres-operator:5432/mydata
#      - REDIS=redis://:fubar@redis-operator:6379/
#      - APP_NAME=mydata-operator
#      - APM_SERVER=http://apm-server:8200
#    ports:
#      - 3000:3000
#    depends_on:
#      - postgres-operator
